#include <emmintrin.h>
#include <immintrin.h>
#include <intrin.h>
#include <iostream>


#define N 1024
#define VAL 50
               


static float* getRandArr()
{
    auto res = new float[N*N];
    for (int i = 0; i < N*N; ++i) {
        res[i] = rand() % (VAL * 2);
    }
    return res;
}


void simd(float* a, float* b, float* c)
{
    for (int i = 0; i < N; i += 4)
    {
        for (int j = 0; j < N; j++)
        {
            __m128 c0;
            for (int k = 0; k < N; k++)
            {
                c0 = _mm_add_ps(c0, _mm_mul_ps(_mm_loadu_ps(a + i + k * N), _mm_loadu_ps(b + k + j * N)));
            }
            _mm_storeu_ps(c + i + j * N, c0);
        }
    }
}

void scalar(float* a, float* b, float* c)
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            float cij = 0;
            for (int k = 0; k < N; k++)
            {
                cij += a[i + k * N] * b[k + j * N];
            }
            c[i + j * N] = cij;
        }
    }
}

